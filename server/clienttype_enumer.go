// Code generated by "enumer -type=ClientType"; DO NOT EDIT.

package server

import (
	"fmt"
	"strings"
)

const _ClientTypeName = "CLIENTROUTERSYSTEMACCOUNT"

var _ClientTypeIndex = [...]uint8{0, 6, 12, 18, 25}

const _ClientTypeLowerName = "clientroutersystemaccount"

func (i ClientType) String() string {
	if i < 0 || i >= ClientType(len(_ClientTypeIndex)-1) {
		return fmt.Sprintf("ClientType(%d)", i)
	}
	return _ClientTypeName[_ClientTypeIndex[i]:_ClientTypeIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _ClientTypeNoOp() {
	var x [1]struct{}
	_ = x[CLIENT-(0)]
	_ = x[ROUTER-(1)]
	_ = x[SYSTEM-(2)]
	_ = x[ACCOUNT-(3)]
}

var _ClientTypeValues = []ClientType{CLIENT, ROUTER, SYSTEM, ACCOUNT}

var _ClientTypeNameToValueMap = map[string]ClientType{
	_ClientTypeName[0:6]:        CLIENT,
	_ClientTypeLowerName[0:6]:   CLIENT,
	_ClientTypeName[6:12]:       ROUTER,
	_ClientTypeLowerName[6:12]:  ROUTER,
	_ClientTypeName[12:18]:      SYSTEM,
	_ClientTypeLowerName[12:18]: SYSTEM,
	_ClientTypeName[18:25]:      ACCOUNT,
	_ClientTypeLowerName[18:25]: ACCOUNT,
}

var _ClientTypeNames = []string{
	_ClientTypeName[0:6],
	_ClientTypeName[6:12],
	_ClientTypeName[12:18],
	_ClientTypeName[18:25],
}

// ClientTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func ClientTypeString(s string) (ClientType, error) {
	if val, ok := _ClientTypeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _ClientTypeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to ClientType values", s)
}

// ClientTypeValues returns all values of the enum
func ClientTypeValues() []ClientType {
	return _ClientTypeValues
}

// ClientTypeStrings returns a slice of all String values of the enum
func ClientTypeStrings() []string {
	strs := make([]string, len(_ClientTypeNames))
	copy(strs, _ClientTypeNames)
	return strs
}

// IsAClientType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i ClientType) IsAClientType() bool {
	for _, v := range _ClientTypeValues {
		if i == v {
			return true
		}
	}
	return false
}
